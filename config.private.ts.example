function getEnv(key, _default, type = 's') {
    if (!!process.env[key] === false) {
        return _default;
    }
    let value = process.env[key];
    switch (type) {
        case 'b':
            return value.toLowerCase() === 'true';
        case 'n':
            return parseInt(value, 10);
        default:
            return value;
    }
}

// Configuración de Passport
export const auth = {
    useLdap:  getEnv('LDAP', false),
    jwtKey:  getEnv('APP_KEY', '5gCYFZPp3dfA2m5UNElVkgRLFcFnBfZp'),
    ldapOU: getEnv('LDAP_HOST', 'ou=People,o=integrabilidad,o=neuquen')
};

// True: Expone una ruta de la api que lista todos los permisos disponibles
export const enablePermisosDoc = false;

// Puerto de LDAP
export const ports = {
    ldapPort: getEnv('LDAP_PORT', ':389')
};

// Hosts
export const hosts = {
    ldap: getEnv('LDAP_HOST', 'ldap.neuquen.gov.ar'),
    elastic_main: getEnv('ELASTIC_HOST', 'localhost:9200'),
    mongoDB_main: {
        host: getEnv('MONGO_MAIN', 'localhost:27017/andes'), // ?authSource=admin
        options: {
            reconnectTries: Number.MAX_VALUE, // Never stop trying to reconnect
            reconnectInterval: 500,
        }
    },
    mongoDB_mpi: {
        host: getEnv('MONGO_MPI', 'localhost:27017/mpi'), // ?authSource=admin
        options: {
            reconnectTries: Number.MAX_VALUE, // Never stop trying to reconnect
            reconnectInterval: 500,
        }
    },
    mongoDB_snomed: {
        host: getEnv('MONGO_SNOMED', 'mongodb://localhost:27017/es-edition'), // ?authSource=admin
        options: {
            reconnectTries: Number.MAX_VALUE, // Never stop trying to reconnect
            reconnectInterval: 500,
        }
    }
};
// Mongoose config
export let mongooseDebugMode = false;

// Swagger config
export let enableSwagger = false;

// Configuración de Google Geocoding
export const geoKey = getEnv('GOOGLE_MAP_KEY', 'GOOGLE_MAP_KEY');

// Configuración servicio SISA
export const sisa = {
    username: getEnv('SISA_USERNAME', ''),
    password: getEnv('SISA_PASSWORD', ''),
    host: getEnv('SISA_HOST', 'sisa.msal.gov.ar'),
    port: getEnv('SISA_PORT', 443, 'n'),
    url: getEnv('SISA_URL', 'https://sisa.msal.gov.ar/sisa/services/rest/cmdb/obtener?')
};
// Configuración servicio ANSES
export const anses = {
    Usuario: getEnv('ANSES_USERNAME', ''),
    password: getEnv('ANSES_PASSWORD', ''),
    url: getEnv('ANSES_URL', ''),
    serv: getEnv('ANSES_SERV', ''),
    serv2: getEnv('ANSES_SERV2', '')
};
// Configuración servicio SINTYS
export const sintys = {
    username: getEnv('SINTYS_USERNAME', ''),
    password: getEnv('SINTYS_PASSWORD', ''),
    host: getEnv('SINTYS_HOST', ''),
    port: getEnv('SINTYS_PORT', 443, 'n'),
    path: getEnv('SINTYS_PATH', '')
};

export const snomed = {
    dbName: getEnv('SNOMED_DB', 'es-edition'),
    dbVersion: getEnv('SNOMED_VERSION', 'v20171200')
};

// Push Notifications
export const pushNotificationsSettings = {
    gcm: {
        id: getEnv('GCM_API_KEY', 'GCM_API_KEY'),
        phonegap: true
    },
    apn: {
        token: {
            key: './certs/key.p8', // optionally: fs.readFileSync('./certs/key.p8')
            keyId: 'ABCD',
            teamId: 'EFGH',
        },
    }
};

// E-mail server settings
export const enviarMail = {
    host: getEnv('EMAIL_HOST', ''),
    port: getEnv('EMAIL_PORT', 587, 'n'),
    secure: getEnv('EMAIL_SECURE', false, 'b'),
    auth: {
        user: getEnv('EMAIL_USERNAME', ''),
        pass: getEnv('EMAIL_PASSWORD', '')
    }
};

// URLs descarga facmacias de turnos
export const farmaciasEndpoints = {
    localidades: 'http://181.231.9.13/cf/consultarturnos.aspx',
    turnos: 'http://181.231.9.13/lawen/turnos.aspx'
};

// Endpoints envio de SMS
export const SMSendpoints = {
    urlOperador: '',
    urlNumero: ''
};

export const jobs = [
    {
        when: '*/5 * * * * * ',
        action: './jobs/roboSenderJob'
    }
];

export const userScheduler = {
    user: {
        usuario: {
            nombre: 'Ejemplo',
            apellido: 'Scheduler'
        },
        organizacion: {
            'nombre': 'Ejemplo'
        }
    },
    ip: '0.0.0.0',
    connection: {
        localAddress: '0.0.0.0'
    }
};

export const conSql = {
    auth: {
        user: '',
        password: ''
    },
    serverSql: {
        server: '',
        database: ''
    },
    pool: {
        acquireTimeoutMillis: 15000
    }
};

export const conSqlHPN = {
    auth : {
        user: '',
        password: ''
    },
    serverSql: {
        server: '',
        database: '',
        port: ''
    },
    pool: {
        acquireTimeoutMillis: 15000
    }

};

export const CDA = {
    rootOID: '',
    dniOID: '',
    idOID: '',
    matriculaOID: '',
};

export const wsSalud = {
   host: '',
   hostHPN: '',
   getPaciente: '',
   getResultado: '',
   hellerWS: '',
   hellerFS: '',
   hpnWS: '',
};
